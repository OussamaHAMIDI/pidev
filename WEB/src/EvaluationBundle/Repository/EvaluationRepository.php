<?php

namespace EvaluationBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EvaluationRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class EvaluationRepository extends EntityRepository
{
    public function getBoutiquesEvaluees()
    {
        $qb= $this->getEntityManager()->createQueryBuilder();
        $qb->select('IDENTITY(e.idBoutique)')
            ->from('EvaluationBundle:Evaluation', 'e')
            ->distinct('e.idBoutique')
            ->orderBy('e.note', 'DESC')
            ->setMaxResults(5);
        $q = $qb->getQuery();
        return $q->execute();
    }

    public function getProduitsEvaluees()
    {
        $qb= $this->getEntityManager()->createQueryBuilder();
        $qb->select('IDENTITY(e.idProduit)')
            ->from('EvaluationBundle:Evaluation', 'e')
            ->distinct('e.idProduit')
            ->orderBy('e.note', 'DESC')
            ->setMaxResults(5);
        $q = $qb->getQuery();
        return $q->execute();
    }

    public function peutEvaluer($id,$idProduit)
    {
        $qb= $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('p')
            ->from('PanierBundle:ProduitPanier', 'pp')
            ->leftJoin(
                'PanierBundle:Panier',
                'p',
                \Doctrine\ORM\Query\Expr\Join::WITH,
                'p.id = pp.idPanier'
            )
            ->where('p.idUser = :user')
            ->andWhere('pp.idProduit = :produit')
            ->setParameter('user', $id)
            ->setParameter('produit', $idProduit);

        $q = $qb->getQuery();
        return $q->execute();
    }


    public function peutEvaluerBoutique($id,$idBoutique)
    {
        $qb= $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('p')
            ->from('PanierBundle:ProduitPanier', 'pp')
            ->leftJoin(
                'PanierBundle:Panier',
                'p',
                \Doctrine\ORM\Query\Expr\Join::WITH,
                'p.id = pp.idPanier'
            )
            ->leftJoin(
                'ProduitBundle:Produit',
                'pr',
                \Doctrine\ORM\Query\Expr\Join::WITH,
                'pr.id = pp.idProduit'
            )
            ->where('p.idUser = :user')
            ->andWhere('pr.boutique = :boutique')
            ->setParameter('user', $id)
            ->setParameter('boutique', $idBoutique);

        $q = $qb->getQuery();
        return $q->execute();
    }


    public function historique($idPanier)
    {
        $qb= $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('p')
            ->from('PanierBundle:ProduitPanier', 'p')
            ->andWhere('p.idPanier = :id')
            ->setParameter('id', $idPanier);
        $q = $qb->getQuery();
        return $q->execute();
    }
}
